nginx 流量控制

map 用法 map指令使用ngx_http_map_module模块提供的

安全
https://blog.csdn.net/u013182675/article/details/50222987
https://www.cnblogs.com/tank1992/p/5613557.html
ngx_http_access_module 配置允许的地址能访问
ngx_http_geo_module 模块变量更合适
nginx 的 http_limit_conn 和 http_limit_req 模块通过限制连接数和请求数能相对有效的防御
ngx_http_limit_conn_module 可以限制单个 IP 的连接数
ngx_http_limit_req_module 可以限制单个 IP 每秒请求数

lua nginx 学习
http://openresty.org/cn/

两个指令 limit_rate 和 limit_rate_after 共同完成

并发连接数
limit_conn_zone 和 limit_conn 这两个指令

内置变量
$args

此变量与请求行中的参数相等 注意我请求中的 referer  此变量表示我请求的所有参数



$content_length

等于请求行的“Content_Length”的值。



$content_type

等同与请求头部的”Content_Type”的值



$document_root

等同于当前请求的root指令指定的值



$document_uri

讲解这个变量之前需要讲解下nginx规范化

所谓规范化，就是先将URI中形如“%XX”的编码字符进行解码，再解析URI中的相对路径“.”和“..”部分， 另外还可能会压缩相邻的两个或多个斜线成为一个斜线，

这也就是如www.xxx.com///index.html 这样的访问也能访问的原因

规范前的url为 www.xxx.com///index.html 保存在$request_uri中

而规范后的url为 www.xxx.com/index.html 保存在$uri中  nginx会压缩相邻的两个或多个斜线成为一个斜线



$host

与请求头部中“Host”行指定的值或是request到达的server的名字（没有Host行）一样 上述例子中没有体现



$limit_rate

允许限制的连接速率 一般不常用



$request_method

等同于request的method，通常是“GET”或“POST”



$remote_addr

客户端ip 这个再做负载均衡的时候 如果要获取到客户端的请求ip需要这个



$remote_port

客户端port



$remote_user

等同于用户名，由ngx_http_auth_basic_module认证



$request_filename

当前请求的文件的路径名，由root或alias和URI request组合而成



$request_body_file
请求body内的文件



$request_uri

含有参数的完整的初始URI 如上例子就是

[plain] view plain copy
https://www.baidu.com/s?wd=aaa&rsv_spt=1&rsv_iqid=0x80378a480003084f&issp=1&f=8&rsv_bp=0&rsv_idx=2&
ie=utf-8&tn=baiduhome_pg&rsv_enter=1&rsv_sug3=4&rsv_sug1=2&rsv_sug7=100&rsv_sug2=0&inputT=1804&rsv_sug4=1805

$query_string

与$args一样 请求中的参数





$sheeme

http模式（http,https）



$server_protocol

等同于request的协议，使用“HTTP/或“HTTP/





$server_addr request

到达的server的ip，一般获得此变量的值的目的是进行系统调用。为了避免系统调用，有必要在listen指令中指明ip，并使用bind参数。



$server_name

请求到达的服务器名



$server_port

请求到达的服务器的端口号



$uri

等同于当前request中的URI，可不同于初始值，例如内部重定向时或使用index



nginx内置变量
内置变量存放在  ngx_http_core_module 模块中，变量的命名方式和apache 服务器变量是一致的。总而言之，这些变量代表着客户端请求头的内容，例如$http_user_agent, $http_cookie, 等等。下面是nginx支持的所有内置变量：

$arg_name

请求中的的参数名，即“?”后面的arg_name=arg_value形式的arg_name

$args

请求中的参数值

$binary_remote_addr

客户端地址的二进制形式, 固定长度为4个字节

$body_bytes_sent

传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的“%B”参数保持兼容

$bytes_sent

传输给客户端的字节数 (1.3.8, 1.2.5)

$connection

TCP连接的序列号 (1.3.8, 1.2.5)

$connection_requests

TCP连接当前的请求数量 (1.3.8, 1.2.5)

$content_length

“Content-Length” 请求头字段

$content_type

“Content-Type” 请求头字段

$cookie_name

cookie名称

$document_root

当前请求的文档根目录或别名

$document_uri

同 $uri

$host

优先级如下：HTTP请求行的主机名>”HOST”请求头字段>符合请求的服务器名

$hostname

主机名

$http_name

匹配任意请求头字段； 变量名中的后半部分“name”可以替换成任意请求头字段，如在配置文件中需要获取http请求头：“Accept-Language”，那么将“－”替换为下划线，大写字母替换为小写，形如：$http_accept_language即可。

$https

如果开启了SSL安全模式，值为“on”，否则为空字符串。

$is_args

如果请求中有参数，值为“?”，否则为空字符串。

$limit_rate

用于设置响应的速度限制，详见 limit_rate。

$msec

当前的Unix时间戳 (1.3.9, 1.2.6)

$nginx_version

nginx版本

$pid

工作进程的PID

$pipe

如果请求来自管道通信，值为“p”，否则为“.” (1.3.12, 1.2.7)

$proxy_protocol_addr

获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串。(1.5.12)

$query_string

同 $args

$realpath_root

当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。

$remote_addr

客户端地址

$remote_port

客户端端口

$remote_user

用于HTTP基础认证服务的用户名

$request

代表客户端的请求地址

$request_body

客户端的请求主体

此变量可在location中使用，将请求主体通过proxy_pass, fastcgi_pass, uwsgi_pass, 和 scgi_pass传递给下一级的代理服务器。

$request_body_file

将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off, uwsgi_pass_request_body off, or scgi_pass_request_body off 。

$request_completion

如果请求成功，值为”OK”，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空。

$request_filename

当前连接请求的文件路径，由root或alias指令与URI请求生成。

$request_length

请求的长度 (包括请求的地址, http请求头和请求主体) (1.3.12, 1.2.7)

$request_method

HTTP请求方法，通常为“GET”或“POST”

$request_time

处理客户端请求使用的时间 (1.3.9, 1.2.6); 从读取客户端的第一个字节开始计时。

$request_uri

这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：”/cnphp/test.php?arg=freemouse”。

$scheme

请求使用的Web协议, “http” 或 “https”

$sent_http_name

可以设置任意http响应头字段； 变量名中的后半部分“name”可以替换成任意响应头字段，如需要设置响应头Content-length，那么将“－”替换为下划线，大写字母替换为小写，形如：$sent_http_content_length 4096即可。

$server_addr

服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。

$server_name
服务器名，www.cnphp.info

$server_port
服务器端口

$server_protocol
服务器的HTTP版本, 通常为 “HTTP/1.0” 或 “HTTP/1.1”

$status

HTTP响应代码 (1.3.2, 1.2.2)

$tcpinfo_rtt, $tcpinfo_rttvar, $tcpinfo_snd_cwnd, $tcpinfo_rcv_space
客户端TCP连接的具体信息

$time_iso8601
服务器时间的ISO 8610格式 (1.3.12, 1.2.7)

$time_local
服务器时间（LOG Format 格式） (1.3.12, 1.2.7)

$uri

请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如”/foo/bar.html”。



go web框架
kataras/iris简介
github地址
https://github.com/kataras/iris

js 引擎
 v8，JavaScriptCore 和 SpiderMonkey

 fibjs
 https://github.com/xicilion/fibjs


Spring 学习
http://start.spring.io/
https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/

http://www.mybatis.org/generator/quickstart.html
apache velocity 根据模板生成

过程
http://spring.io/projects/spring-boot


在线教学（程序执行过程）
http://www.pythontutor.com/visualize.html#mode=edit