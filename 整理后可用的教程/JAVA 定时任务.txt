<!-- https://mvnrepository.com/artifact/it.sauronsoftware.cron4j/cron4j -->
<dependency>
    <groupId>it.sauronsoftware.cron4j</groupId>
    <artifactId>cron4j</artifactId>
    <version>2.2.5</version>
</dependency>

教程
表达式：* * * * * *  秒 分 时 天 月 周
支持 线程调度 进程调度
线程
scheduler.schedule("* * * * * ", new Runnable(){});
进程
scheduler.schedule("* * * * * ", new ProcessTask(){});

代码实例
========================================================================================
Scheduler scheduler = new Scheduler();
scheduler.schedule("* * * * * ", new Runnable() {
    @Override
    public void run() {
        System.out.println(Thread.currentThread().getName()+" hello");
    }
});
scheduler.schedule("* * * * * ", new Runnable() {
    @Override
    public void run() {
        System.out.println(Thread.currentThread().getName()+" hello2");
    }
});
scheduler.start();
========================================================================================



简单定时任务

<!-- https://mvnrepository.com/artifact/jdring/jdring -->
<dependency>
    <groupId>jdring</groupId>
    <artifactId>jdring</artifactId>
    <version>1.0</version>
</dependency>


netty 包中的定时任务
WheelTimer

========================================================================================
import io.netty.util.HashedWheelTimer;
import io.netty.util.Timeout;
import io.netty.util.TimerTask;
HashedWheelTimer timer = new HashedWheelTimer();
Timeout timeout = timer.newTimeout();
========================================================================================



xxl-job
========================================================================================
http://www.xuxueli.com/xxl-job/#/?id=%E3%80%8A%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%B9%B3%E5%8F%B0xxl-job%E3%80%8B
<!-- https://mvnrepository.com/artifact/com.xuxueli/xxl-job-core -->
<dependency>
    <groupId>com.xuxueli</groupId>
    <artifactId>xxl-job-core</artifactId>
    <version>2.0.1</version>
</dependency>