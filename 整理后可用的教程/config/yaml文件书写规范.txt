基本语法
大小写敏感
使用缩进表示层级关系
缩进不允许使用tab，只允许空格
缩进的空格数不重要，只要相同层级的元素左对齐即可
'#'表示注释

YAML 支持以下几种数据类型：
对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）
数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）
纯量（scalars）：单个的、不可再分的值

------------------------------------
YAML 对象
key:{key1: value1, key2: value2, ...}
缩进表示层级关系
key: 
    child-key: value
    child-key2: value2
复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value
?  
    - complexkey1
    - complexkey2
:
    - complexvalue1
    - complexvalue2
对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]

------------------------------------
YAML 数组
- 开头的行表示构成一个数组
- A
- B
- C
YAML 支持多维数组，可以使用行内表示
key: [value1, value2, ...]
数据结构的子成员是一个数组，则可以在该项下面缩进一个空格
-
 - A
 - B
 - C
复杂对象
companies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]

------------------------------------
纯量
纯量是最基本的，不可再分的值，包括：
字符串
布尔值
整数
浮点数
Null
时间
日期

boolean: 
    - TRUE  #true,True都可以
    - FALSE  #false，False都可以
float:
    - 3.14
    - 6.8523015e+5  #可以使用科学计数法
int:
    - 123
    - 0b1010_0111_0100_1010_1110    #二进制表示
null:
    nodeName: 'node'
    parent: ~  #使用~表示null
string:
    - 哈哈
    - 'Hello world'  #可以使用双引号或者单引号包裹特殊字符
    - newline
      newline2    #字符串可以拆成多行，每一行会被转化成一个空格
date:
    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd
datetime: 
    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区

------------------------------------
引用
& 锚点和 * 别名，可以用来引用:
& 用来建立锚点（defaults），<< 表示合并到当前数据，* 用来引用锚点。



