ES中的基本概念
cluster
代表一个集群，集群中有多个节点，其中有一个为主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。es的一个概念就是去中心化，字面上理解就是无中心节点，这是对于集群外部来说的，因为从外部来看es集群，在逻辑上是个整体，你与任何一个节点的通信和与整个es集群通信是等价的。

shards
代表索引分片，es可以把一个完整的索引分成多个分片，这样的好处是可以把一个大的索引拆分成多个，分布到不同的节点上。构成分布式搜索。分片的数量只能在索引创建前指定，并且索引创建后不能更改。

replicas
代表索引副本，es可以设置多个索引的副本，副本的作用一是提高系统的容错性，当某个节点某个分片损坏或丢失时可以从副本中恢复。二是提高es的查询效率，es会自动对搜索请求进行负载均衡。

recovery
代表数据恢复或叫数据重新分布，es在有节点加入或退出时会根据机器的负载对索引分片进行重新分配，挂掉的节点重新启动时也会进行数据恢复。

river
代表es的一个数据源，也是其它存储方式（如：数据库）同步数据到es的一个方法。它是以插件方式存在的一个es服务，通过读取river中的数据并把它索引到es中，官方的river有couchDB的，RabbitMQ的，Twitter的，Wikipedia的。

gateway
代表es索引快照的存储方式，es默认是先把索引存放到内存中，当内存满了时再持久化到本地硬盘。gateway对索引快照进行存储，当这个es集群关闭再重新启动时就会从gateway中读取索引备份数据。es支持多种类型的gateway，有本地文件系统（默认），分布式文件系统，Hadoop的HDFS和amazon的s3云存储服务。

discovery.zen
代表es的自动发现节点机制，es是一个基于p2p的系统，它先通过广播寻找存在的节点，再通过多播协议来进行节点之间的通信，同时也支持点对点的交互。

Transport
代表es内部节点或集群与客户端的交互方式，默认内部是使用tcp协议进行交互，同时它支持http协议（json格式）、thrift、servlet、memcached、zeroMQ等的传输协议（通过插件方式集成）。




可以使用curl命令来获取集群的相关的信息，
_cat代表查看信息
nodes为查看节点信息，默认会显示为一行，所以就用刀了?pretty让信息更有好的显示
?pretty让输出信息更友好的显示





ES 基础命令
------------------------------ES 基础命令------------------------------

1.查看es下所有的东西  http://localhost:9200/_cat

2.查看es下所有的索引 http://localhost:9200/_cat/indices

3.查看索引bank的索引结构 http://localhost:9200/bank/

4.卸载x-package bin/elasticsearch-plugin remove x-pack

5.终端命令行查看索引情况 curl localhost:9200/_cat/indices?v'

7.put 有指定id  post自动生成id

8.更新用post 支持脚本方式

9.排序 http://localhost:9200/bank/_search?q=*&sort=account_number:desc&pretty  字段account_number 按倒序排列。倒序desc 正序 asc

等同于：

GET http://localhost:9200/bank/_search
{
  "query": { "match_all": {} },
  "sort": [
    { "account_number": "desc" }
  ]
}




10.过滤加排序 http://localhost:9200/bank/_search?q=firstname:Bradshaw&sort=account_number:asc&pretty   firstname是Bradshaw并且字段account_number 按倒序排列

11.结果集解释：

took – es执行搜索花费的时间(毫秒)
timed_out – 搜索是否超时
_shards – 告诉我们，多少分片被搜索，搜索时成功/失败的分片各多少。
hits – 搜索结果
hits.total – 匹配我们搜索条件的文档数量。
hits.hits – 实际搜索出的结果数组。（默认显示前10条）
hits.sort - 搜索出的排序
hits._score and max_score - 搜索匹配分数

12.我们可以在命令中端执行通过DSL方式去查询，可以通过 curl 'http://localhost:9200/bank/_search?pretty' --data-binary "@b.json"，其中，--data-binary 参数可以执行本地DSL，注意执行该语句时，DSL文件（b.json）一定要在当前目录(bin目录下)

  也可以通过以下方式：

curl -XGET 'localhost:9200/bank/_search?pretty' -H 'Content-Type: application/json' -d'
{
  "query": { "match_all": {} }
}

------------------------------ES 基础命令------------------------------