计算密集型      用户线程数不要多于系统内核数CPU数量
IO密集型的任务  开辟更多的线程执行任务。当一个任务执行IO操作的时候，线程将会被阻塞
线程数量=内核数量 / （1 - 阻塞率）

1、多对一模型
将多个用户级线程映射到一个内核级线程，线程管理在用户空间完成。用户级线程对操作系统不可见（透明）。
优点：线程管理是在用户空间进行的，因而效率比较高
缺点：一个线程在使用内核服务时被阻塞，整个进程都会被阻塞。
2、一对一模型
将每个用户级线程映射到一个内核级线程。
优点：当一个线程被阻塞时，允许另一个线程继续运行，并发能力强。
缺点：每创建一个用户级线程都需要创建一个内核级线程与其对应，这样创建线程的开销比较大，会影响到应用程序的性能。
3、多对多模型
将n个用户级线程映射到m个内核级线程上，要求m<=n；
特点：前两者的折中。